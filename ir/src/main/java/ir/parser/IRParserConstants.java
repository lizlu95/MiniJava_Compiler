/* Generated By:JavaCC: Do not edit this line. IRParserConstants.java */
package ir.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface IRParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int MULTI_LINE_COMMENT = 5;
    /**
     * RegularExpression Id.
     */
    int SINGLE_LINE_COMMENT = 6;
    /**
     * RegularExpression Id.
     */
    int MF = 7;
    /**
     * RegularExpression Id.
     */
    int DF = 8;
    /**
     * RegularExpression Id.
     */
    int IRDATA = 9;
    /**
     * RegularExpression Id.
     */
    int VALUES = 10;
    /**
     * RegularExpression Id.
     */
    int FRAME = 11;
    /**
     * RegularExpression Id.
     */
    int label = 12;
    /**
     * RegularExpression Id.
     */
    int NLO = 13;
    /**
     * RegularExpression Id.
     */
    int formals = 14;
    /**
     * RegularExpression Id.
     */
    int LIST = 15;
    /**
     * RegularExpression Id.
     */
    int TS = 16;
    /**
     * RegularExpression Id.
     */
    int LABEL = 17;
    /**
     * RegularExpression Id.
     */
    int MOVE = 18;
    /**
     * RegularExpression Id.
     */
    int CONST = 19;
    /**
     * RegularExpression Id.
     */
    int MEM = 20;
    /**
     * RegularExpression Id.
     */
    int NAME = 21;
    /**
     * RegularExpression Id.
     */
    int CALL = 22;
    /**
     * RegularExpression Id.
     */
    int BINOPP = 23;
    /**
     * RegularExpression Id.
     */
    int ASSIGN = 24;
    /**
     * RegularExpression Id.
     */
    int CJUMPP = 25;
    /**
     * RegularExpression Id.
     */
    int JUMP = 26;
    /**
     * RegularExpression Id.
     */
    int EXP = 27;
    /**
     * RegularExpression Id.
     */
    int L = 28;
    /**
     * RegularExpression Id.
     */
    int E = 29;
    /**
     * RegularExpression Id.
     */
    int G = 30;
    /**
     * RegularExpression Id.
     */
    int LE = 31;
    /**
     * RegularExpression Id.
     */
    int NE = 32;
    /**
     * RegularExpression Id.
     */
    int GE = 33;
    /**
     * RegularExpression Id.
     */
    int B = 34;
    /**
     * RegularExpression Id.
     */
    int A = 35;
    /**
     * RegularExpression Id.
     */
    int BE = 36;
    /**
     * RegularExpression Id.
     */
    int AE = 37;
    /**
     * RegularExpression Id.
     */
    int PLUS = 38;
    /**
     * RegularExpression Id.
     */
    int MINUS = 39;
    /**
     * RegularExpression Id.
     */
    int MUL = 40;
    /**
     * RegularExpression Id.
     */
    int LPAREN = 41;
    /**
     * RegularExpression Id.
     */
    int RPAREN = 42;
    /**
     * RegularExpression Id.
     */
    int LB = 43;
    /**
     * RegularExpression Id.
     */
    int RB = 44;
    /**
     * RegularExpression Id.
     */
    int EQUALS = 45;
    /**
     * RegularExpression Id.
     */
    int COMMA = 46;
    /**
     * RegularExpression Id.
     */
    int STAR = 47;
    /**
     * RegularExpression Id.
     */
    int COLON = 48;
    /**
     * RegularExpression Id.
     */
    int INTEGER_LITERAL = 49;
    /**
     * RegularExpression Id.
     */
    int REGISTER = 50;
    /**
     * RegularExpression Id.
     */
    int FAKEREGISTER = 51;
    /**
     * RegularExpression Id.
     */
    int IDENTIFIER = 52;
    /**
     * RegularExpression Id.
     */
    int LETTER = 53;
    /**
     * RegularExpression Id.
     */
    int DIGIT = 54;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\r\"",
            "\"\\n\"",
            "\"\\t\"",
            "<MULTI_LINE_COMMENT>",
            "<SINGLE_LINE_COMMENT>",
            "\"MethodFragment\"",
            "\"DataFragment\"",
            "\"IRData\"",
            "\"values\"",
            "\"X86_64Frame\"",
            "\"label\"",
            "\"nextLocalOffset\"",
            "\"formals\"",
            "\"List\"",
            "\"trace scheduled:\"",
            "\"LABEL\"",
            "\"MOVE\"",
            "\"CONST\"",
            "\"MEM\"",
            "\"NAME\"",
            "\"CALL\"",
            "\"BINOP\"",
            "\"<-\"",
            "\"CJUMP\"",
            "\"JUMP\"",
            "\"EXP\"",
            "\"LT\"",
            "\"EQ\"",
            "\"GT\"",
            "\"LE\"",
            "\"NE\"",
            "\"GE\"",
            "\"ULT\"",
            "\"UGT\"",
            "\"ULE\"",
            "\"UGE\"",
            "\"PLUS\"",
            "\"MINUS\"",
            "\"MUL\"",
            "\"(\"",
            "\")\"",
            "\"{\"",
            "\"}\"",
            "\"=\"",
            "\",\"",
            "\"*\"",
            "\":\"",
            "<INTEGER_LITERAL>",
            "<REGISTER>",
            "<FAKEREGISTER>",
            "<IDENTIFIER>",
            "<LETTER>",
            "<DIGIT>",
    };

}
