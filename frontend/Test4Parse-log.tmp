### BEG # TEST 1 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Point().doit());
  }
}
class Point {
    int x; int y;
   public int doit() {
      x = 10;
      y = 20;
      return x+2*y;
   }
}
### END # TEST 1 ###
### BEG # TEST 2 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().do(true,true));
  }
}
class Foo {
    public int do(boolean a, boolean b) { 
      if (a && b)
         System.out.println(1);
      else 
         System.out.println(0);
      return 99;
   }
}
### END # TEST 2 ###
### BEG # TEST 3 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().parg(10));
  }
}
class Foo {
    public int parg(int arg) { 
      System.out.println(arg);
      return arg;
   }
}
### END # TEST 3 ###
### BEG # TEST 4 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(10+20);
  }
}
### END # TEST 4 ###
### BEG # TEST 5 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().fac(4));
  }
}
class Foo {
    public int fac(int n) { 
      int fac;
      int i;
      i = n; fac = 1; 
      while (0<i) { fac = fac*i; i = i-1; } 
      return fac;
   }
}
### END # TEST 5 ###
### BEG # TEST 6 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().getFoo());
  }
}
class Foo {
    public int getFoo() { return 78; }
}
### END # TEST 6 ###
### BEG # TEST 7 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().sum(14,17));
  }
}
class Foo {
    public int sum(int x, int y) { return x+y*99; }
}
### END # TEST 7 ###
### BEG # TEST 8 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().sum(14,17));
  }
}
class Foo {
    public int sum(int x, int y) { 
       int tmp;
       int tmp2;
       tmp = y*99;
       tmp2 = x*2;
       return tmp+tmp2;
   }
}
### END # TEST 8 ###
### BEG # TEST 9 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().do());
  }
}
class Foo {
    public int do() { 
      int[] arr;
      arr = new int[1];
      arr[0] = 99;
      return arr[0];
   }
}
### END # TEST 9 ###
### BEG # TEST 10 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().do(2));
  }
}
class Foo {
    int [] arr;
   public int do(int y) { 
      return this.n(5)[0] + this.n(15)[0];
   }
   public int [] n(int n) { 
      arr = new int[n];
	   arr[0] = n;
      return arr;
   }
}
### END # TEST 10 ###
### BEG # TEST 11 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().warg(5));
  }
}
class Foo {
    public int warg(int arg) { 
      while (0<arg) {
         System.out.println(arg);
         arg = arg - 1;
      }
      return arg;
   }
}
### END # TEST 11 ###
### BEG # TEST 12 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().doit(new int[10]));
  }
}
class Foo {
    public int doit(int[] arr) { 
      int dum;
      dum = this.init(arr);
      return this.sum(arr);
   }
   public int init(int[] arr) {
      int i;
      i = 0;
      while (i < arr.length) {
         arr[i] = i+1;
         i = i + 1;
      }
      return 0;
   }
   public int sum(int[] arr) {
      int i;
      int sum;
      i = 0; sum = 0;
      while (i < arr.length) {
         sum = sum + arr[i];
         i = i + 1;
      }
      return sum;
   }
}
### END # TEST 12 ###
### BEG # TEST 13 ###
---------------
class Main {
  public static void main(String[] args) {
      { System.out.println(new Foo().max(10,20));
        System.out.println(new Foo().max(20,10));
      }
  }
}
class Foo {
    public int max(int x, int y) { 
      int tmp;
      if (x<y) tmp = y; else tmp = x;
      return tmp;
   }
}
### END # TEST 13 ###
### BEG # TEST 14 ###
---------------
class Main {
  public static void main(String[] args) {
      { System.out.println(new Foo().max(10,20));
        System.out.println(new Foo().max(20,10));
      }
  }
}
class Foo {
    public int max(int x, int y) { 
      int tmp;
      if (!(y<x)) tmp = y; else tmp = x;
      return tmp;
   }
}
### END # TEST 14 ###
### BEG # TEST 15 ###
---------------
class Main {
  public static void main(String[] args) {
      { System.out.println(new Foo().max(10,20));
        System.out.println(new Foo().max(20,10));
      }
  }
}
class Foo {
    public int max(int x, int y) { 
      int tmp; boolean flag;
      flag = y < x;
      flag = !flag;
      if (flag) tmp = y; else tmp = x;
      return tmp;
   }
}
### END # TEST 15 ###
### BEG # TEST 16 ###
---------------
class Main {
  public static void main(String[] args) {
      { System.out.println(new Foo().max(10,20));
        System.out.println(new Foo().max(20,10));
      }
  }
}
class Foo {
    public int max(int x, int y) { 
      int tmp; boolean flag;
      flag = y < x;
      if (!flag) tmp = y; else tmp = x;
      return tmp;
   }
}
### END # TEST 16 ###
### BEG # TEST 17 ###
---------------
class Main {
  public static void main(String[] args) { {
      System.out.println(new Foo().doit(10));
  } }
}
class Foo {
    public int doit(int x) {
      int result;
      int count;
      result = 0;
      count = 1;
      while (count<x) {
          result = result + count;
          count = count + 1;
      }
      return result;
   }
}
### END # TEST 17 ###
### BEG # TEST 18 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Point().doit());
  }
}
class Point {
    int x; int y;
   Point p;
   public int donothing() {
      return 10;
   }

   public int doit() {
      x = 10;
      y = 20;
      p = new Point();
      return p.donothing();
   }
}
### END # TEST 18 ###
### BEG # TEST 19 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Test().doit());
  }
}
class Test {
   public int doit() {
      Point p1; Point p2;
      int ignore;
      p1 = new Point().init(1,2);
      p2 = new Point().init(10,20);
      ignore = p1.print();
      return p2.print();
   }
}
class Point {
   int x; int y;
   public Point init(int ix, int iy) {
      x = ix;
      y = iy;
      return this;
   }
   public int print() {
      System.out.println(x);
      System.out.println(y);
      return 0;
   }
}
### END # TEST 19 ###
### BEG # TEST 20 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Test().doit());
  }
}
class Test {
   int count;
   public boolean cond() {
      count = count + 1;
      return true;
   }
   public int doit() {
     boolean a;
     a = this.cond() && this.cond() && this.cond();
     if (a && this.cond() && this.cond() && this.cond() && this.cond())
        System.out.println(1);     else
        System.out.println(0);     return count;
   }
}
### END # TEST 20 ###
### BEG # TEST 21 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Test().test(true));
  }
}
class Test {
  public int test(boolean flag) {
     if (flag) {} else {}
     return 9999;
  }
}
### END # TEST 21 ###
### BEG # TEST 22 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Test().test(true));
  }
}
class Test {
  public int test(boolean flag) {
      if (true) System.out.println(99); else {}
      return 9999;
  }
}
### END # TEST 22 ###
### BEG # TEST 23 ###
---------------
File: sample/BinarySearch.java
### END # TEST 23 ###
### BEG # TEST 24 ###
---------------
class Main {
  public static void main(String[] args) { {} }
}
### END # TEST 24 ###
### BEG # TEST 25 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(10);
  }
}
### END # TEST 25 ###
### BEG # TEST 26 ###
---------------
class Main {
  public static void main(String[] args) {
      {}
  }
}
class Foo {
    public int getFoo() { return 0; }
}
### END # TEST 26 ###
### BEG # TEST 27 ###
---------------
class Main {
  public static void main(String[] args) {
      System.out.println(new Foo().getSet(new int[2],17));
  }
}
class Foo {
    public int getSet(int[] arr, int y) { 
      arr[0] = y;
      arr[1] = 2*arr[0];
      return arr[0]+arr[1]+arr.length;
   }
}
### END # TEST 27 ###
### BEG # TEST 28 ###
---------------
class Main {
  public static void main(String[] args) { {
      System.out.println(new Foo().doit(10,20));
      System.out.println(new Foo().doit(20,10));
  } }
}
class Foo {
    public int doit(int x, int y) {
      int result;
      if (this.ordered(x, y))
         result = 99;
      else
         result = 22;
      return result;
   }
   public boolean ordered(int x, int y) { 
      return x<y;
   }
}
### END # TEST 28 ###
