/* Generated By:JavaCC: Do not edit this line. X86_64SimParserConstants.java */
package x86_64sim.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface X86_64SimParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int MULTI_LINE_COMMENT = 4;
    /**
     * RegularExpression Id.
     */
    int SINGLE_LINE_COMMENT = 5;
    /**
     * RegularExpression Id.
     */
    int GLOBL = 6;
    /**
     * RegularExpression Id.
     */
    int ALIGN = 7;
    /**
     * RegularExpression Id.
     */
    int QUAD = 8;
    /**
     * RegularExpression Id.
     */
    int TEXT = 9;
    /**
     * RegularExpression Id.
     */
    int DATA = 10;
    /**
     * RegularExpression Id.
     */
    int SECTION = 11;
    /**
     * RegularExpression Id.
     */
    int TYPE = 12;
    /**
     * RegularExpression Id.
     */
    int SIZE = 13;
    /**
     * RegularExpression Id.
     */
    int IDENT = 14;
    /**
     * RegularExpression Id.
     */
    int CMP = 15;
    /**
     * RegularExpression Id.
     */
    int INC = 16;
    /**
     * RegularExpression Id.
     */
    int DEC = 17;
    /**
     * RegularExpression Id.
     */
    int ADD = 18;
    /**
     * RegularExpression Id.
     */
    int SUB = 19;
    /**
     * RegularExpression Id.
     */
    int MUL = 20;
    /**
     * RegularExpression Id.
     */
    int DIV = 21;
    /**
     * RegularExpression Id.
     */
    int XOR = 22;
    /**
     * RegularExpression Id.
     */
    int CQTO = 23;
    /**
     * RegularExpression Id.
     */
    int MOV = 24;
    /**
     * RegularExpression Id.
     */
    int CMOVL = 25;
    /**
     * RegularExpression Id.
     */
    int CMOVE = 26;
    /**
     * RegularExpression Id.
     */
    int CMOVG = 27;
    /**
     * RegularExpression Id.
     */
    int CMOVLE = 28;
    /**
     * RegularExpression Id.
     */
    int CMOVNE = 29;
    /**
     * RegularExpression Id.
     */
    int CMOVGE = 30;
    /**
     * RegularExpression Id.
     */
    int CMOVB = 31;
    /**
     * RegularExpression Id.
     */
    int CMOVA = 32;
    /**
     * RegularExpression Id.
     */
    int CMOVBE = 33;
    /**
     * RegularExpression Id.
     */
    int CMOVAE = 34;
    /**
     * RegularExpression Id.
     */
    int JL = 35;
    /**
     * RegularExpression Id.
     */
    int JE = 36;
    /**
     * RegularExpression Id.
     */
    int JG = 37;
    /**
     * RegularExpression Id.
     */
    int JLE = 38;
    /**
     * RegularExpression Id.
     */
    int JNE = 39;
    /**
     * RegularExpression Id.
     */
    int JGE = 40;
    /**
     * RegularExpression Id.
     */
    int JB = 41;
    /**
     * RegularExpression Id.
     */
    int JA = 42;
    /**
     * RegularExpression Id.
     */
    int JBE = 43;
    /**
     * RegularExpression Id.
     */
    int JAE = 44;
    /**
     * RegularExpression Id.
     */
    int JMP = 45;
    /**
     * RegularExpression Id.
     */
    int CALL = 46;
    /**
     * RegularExpression Id.
     */
    int LEAVE = 47;
    /**
     * RegularExpression Id.
     */
    int LEA = 48;
    /**
     * RegularExpression Id.
     */
    int PUSH = 49;
    /**
     * RegularExpression Id.
     */
    int RET = 50;
    /**
     * RegularExpression Id.
     */
    int SAR = 51;
    /**
     * RegularExpression Id.
     */
    int LPAREN = 52;
    /**
     * RegularExpression Id.
     */
    int RPAREN = 53;
    /**
     * RegularExpression Id.
     */
    int COMMA = 54;
    /**
     * RegularExpression Id.
     */
    int DOLLAR = 55;
    /**
     * RegularExpression Id.
     */
    int NL = 56;
    /**
     * RegularExpression Id.
     */
    int STAR = 57;
    /**
     * RegularExpression Id.
     */
    int INTEGER_LITERAL = 58;
    /**
     * RegularExpression Id.
     */
    int SCALE_LITERAL = 59;
    /**
     * RegularExpression Id.
     */
    int REGISTER = 60;
    /**
     * RegularExpression Id.
     */
    int RIP = 61;
    /**
     * RegularExpression Id.
     */
    int IDENTIFIER = 62;
    /**
     * RegularExpression Id.
     */
    int STRING = 63;
    /**
     * RegularExpression Id.
     */
    int LETTER = 64;
    /**
     * RegularExpression Id.
     */
    int DIGIT = 65;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\r\"",
            "\"\\t\"",
            "<MULTI_LINE_COMMENT>",
            "<SINGLE_LINE_COMMENT>",
            "\".globl\"",
            "\".align\"",
            "\".quad\"",
            "\".text\"",
            "\".data\"",
            "<SECTION>",
            "<TYPE>",
            "<SIZE>",
            "\".ident\"",
            "\"cmpq\"",
            "\"incq\"",
            "\"decq\"",
            "\"addq\"",
            "\"subq\"",
            "\"imulq\"",
            "\"idivq\"",
            "\"xorq\"",
            "\"cqto\"",
            "\"movq\"",
            "\"cmovl\"",
            "\"cmove\"",
            "\"cmovg\"",
            "\"cmovle\"",
            "\"cmovne\"",
            "\"cmovge\"",
            "\"cmovlb\"",
            "\"cmova\"",
            "\"cmovbe\"",
            "\"cmovae\"",
            "\"jl\"",
            "\"je\"",
            "\"jg\"",
            "\"jle\"",
            "\"jne\"",
            "\"jge\"",
            "\"jb\"",
            "\"ja\"",
            "\"jbe\"",
            "\"jae\"",
            "\"jmp\"",
            "\"call\"",
            "\"leave\"",
            "\"leaq\"",
            "\"pushq\"",
            "\"ret\"",
            "\"sarq\"",
            "\"(\"",
            "\")\"",
            "\",\"",
            "\"$\"",
            "\"\\n\"",
            "\"*\"",
            "<INTEGER_LITERAL>",
            "<SCALE_LITERAL>",
            "<REGISTER>",
            "\"%rip\"",
            "<IDENTIFIER>",
            "<STRING>",
            "<LETTER>",
            "<DIGIT>",
            "\":\"",
    };

}
