Write at address 4088 out of boundsThe program was:
Program with 36 labels and 228 instructions
_A_ainit:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	%rsi, %rsp
	movq	%rdx, %rsp
	movq	%rsp, (%rsp)
	movq	8, %rsp
	addq	%rsp, %rsp
	movq	%rsp, (%rsp)
	xorq	%rsp, %rsp
	movq	%rsp, %rax
_bail_1:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_11:
	ret
_A_getX:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	(%rsp), %rsp
	movq	%rsp, %rax
_bail_2:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_13:
	ret
_A_getY:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	8, %rsp
	addq	%rsp, %rsp
	movq	(%rsp), %rsp
	movq	%rsp, %rax
_bail_3:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_15:
	ret
_A_sum:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	8, %rsp
	addq	%rsp, %rsp
	movq	(%rsp), %rsp
	movq	(%rsp), %rsp
	addq	%rsp, %rsp
	movq	%rsp, %rax
_bail_4:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_17:
	ret
_B_binit:
	subq	$8, %rsp
_L_18:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	%rsi, %rsp
	movq	%rdx, %rsp
	movq	%rcx, %rsp
	movq	%rsp, %rdx
	movq	%rsp, %rsi
	movq	%rsp, %rdi
	call	_A_ainit
	movq	%rax, %rsp
	movq	16, %rsp
	addq	%rsp, %rsp
	movq	%rsp, (%rsp)
	xorq	%rsp, %rsp
	movq	%rsp, %rax
_bail_5:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_19:
	addq	$8, %rsp
	ret
_L_20:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	16, %rsp
	addq	%rsp, %rsp
	movq	(%rsp), %rsp
	movq	%rsp, %rax
_bail_6:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_21:
	ret
_B_sum:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	movq	16, %rsp
	addq	%rsp, %rsp
	movq	(%rsp), %rsp
	movq	8, %rsp
	addq	%rsp, %rsp
	movq	(%rsp), %rsp
	movq	(%rsp), %rsp
	addq	%rsp, %rsp
	addq	%rsp, %rsp
	movq	%rsp, %rax
_bail_7:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_23:
	ret
_Test_do:
	subq	$8, %rsp
_L_24:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	movq	%rdi, %rsp
	xorq	%rsp, %rsp
	xorq	%rsp, %rsp
	xorq	%rsp, %rsp
	movq	16, %rsp
	movq	%rsp, %rdi
	call	_cs411newobject
	movq	%rax, %rsp
	movq	24, %rsp
	movq	%rsp, %rdi
	call	_cs411newobject
	movq	%rax, %rsp
	movq	2, %rsp
	movq	%rsp, %rdx
	movq	1, %rsp
	movq	%rsp, %rsi
	movq	%rsp, %rdi
	call	_A_ainit
	movq	%rax, %rsp
	movq	3, %rsp
	movq	%rsp, %rcx
	movq	2, %rsp
	movq	%rsp, %rdx
	movq	1, %rsp
	movq	%rsp, %rsi
	movq	%rsp, %rdi
	call	_B_binit
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_A_getX
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	movq	%rsp, %rdi
	call	_A_getY
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	movq	%rsp, %rdi
	call	_B_getZ
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	movq	%rsp, %rdi
	call	_A_sum
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	movq	%rsp, %rdi
	call	_B_sum
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	movq	%rsp, %rdi
	call	_A_sum
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
	xorq	%rsp, %rsp
	movq	%rsp, %rax
_bail_8:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_25:
	addq	$8, %rsp
	ret
_cs411main:
	subq	$8, %rsp
_L_26:
	movq	%rbx, %rsp
	movq	%r12, %rsp
	movq	%r13, %rsp
	movq	%r14, %rsp
	movq	%r15, %rsp
	xorq	%rsp, %rsp
	movq	%rsp, %rdi
	call	_cs411newobject
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_Test_do
	movq	%rax, %rsp
	movq	%rsp, %rdi
	call	_cs411println
_bail_9:
	movq	%rsp, %rbx
	movq	%rsp, %r12
	movq	%rsp, %r13
	movq	%rsp, %r14
	movq	%rsp, %r15
_DONE_27:
	addq	$8, %rsp
	ret
