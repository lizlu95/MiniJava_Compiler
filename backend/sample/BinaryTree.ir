MethodFragment {
   X86_64Frame { label = BT_Start
      nextLocalOffset = -8
      formals = List {
         t1009
      }
   }
   List {
      LABEL L_520
      MOVE(
         t1032 <-
         %rbx:%rbx)
      MOVE(
         t1033 <-
         %r12:%r12)
      MOVE(
         t1034 <-
         %r13:%r13)
      MOVE(
         t1035 <-
         %r14:%r14)
      MOVE(
         t1036 <-
         %r15:%r15)
      MOVE(
         t1009 <-
         %rdi:%rdi)
      MOVE(
         t1010 <-
         CONST 0)
      MOVE(
         t1010 <-
         CALL(
            NAME(cs411newobject),
            CONST 48))
      MOVE(
         t1013 <-
         t1010)
      CJUMP(EQ,
         t1013,
         CONST 0,
         invokebad_347, invokeok_346)
      LABEL invokeok_346
      MOVE(
         t1256 <-
         CALL(
            NAME(Tree_Init),
            t1013,
            CONST 16))
      MOVE(
         t1011 <-
         t1256)
      MOVE(
         t1014 <-
         t1010)
      CJUMP(EQ,
         t1014,
         CONST 0,
         invokebad_347, invokeok_348)
      LABEL invokeok_348
      MOVE(
         t1257 <-
         CALL(
            NAME(Tree_Print),
            t1014))
      MOVE(
         t1011 <-
         t1257)
      EXP(CALL(
         NAME(cs411println),
         CONST 100000000))
      MOVE(
         t1015 <-
         t1010)
      CJUMP(EQ,
         t1015,
         CONST 0,
         invokebad_347, invokeok_349)
      LABEL invokeok_349
      MOVE(
         t1258 <-
         CALL(
            NAME(Tree_Insert),
            t1015,
            CONST 8))
      MOVE(
         t1011 <-
         t1258)
      MOVE(
         t1016 <-
         t1010)
      CJUMP(EQ,
         t1016,
         CONST 0,
         invokebad_347, invokeok_350)
      LABEL invokeok_350
      MOVE(
         t1259 <-
         CALL(
            NAME(Tree_Print),
            t1016))
      MOVE(
         t1011 <-
         t1259)
      MOVE(
         t1017 <-
         t1010)
      CJUMP(EQ,
         t1017,
         CONST 0,
         invokebad_347, invokeok_351)
      LABEL invokeok_351
      MOVE(
         t1260 <-
         CALL(
            NAME(Tree_Insert),
            t1017,
            CONST 24))
      MOVE(
         t1011 <-
         t1260)
      MOVE(
         t1018 <-
         t1010)
      CJUMP(EQ,
         t1018,
         CONST 0,
         invokebad_347, invokeok_352)
      LABEL invokeok_352
      MOVE(
         t1261 <-
         CALL(
            NAME(Tree_Insert),
            t1018,
            CONST 4))
      MOVE(
         t1011 <-
         t1261)
      MOVE(
         t1019 <-
         t1010)
      CJUMP(EQ,
         t1019,
         CONST 0,
         invokebad_347, invokeok_353)
      LABEL invokeok_353
      MOVE(
         t1262 <-
         CALL(
            NAME(Tree_Insert),
            t1019,
            CONST 12))
      MOVE(
         t1011 <-
         t1262)
      MOVE(
         t1020 <-
         t1010)
      CJUMP(EQ,
         t1020,
         CONST 0,
         invokebad_347, invokeok_354)
      LABEL invokeok_354
      MOVE(
         t1263 <-
         CALL(
            NAME(Tree_Insert),
            t1020,
            CONST 20))
      MOVE(
         t1011 <-
         t1263)
      MOVE(
         t1021 <-
         t1010)
      CJUMP(EQ,
         t1021,
         CONST 0,
         invokebad_347, invokeok_355)
      LABEL invokeok_355
      MOVE(
         t1264 <-
         CALL(
            NAME(Tree_Insert),
            t1021,
            CONST 28))
      MOVE(
         t1011 <-
         t1264)
      MOVE(
         t1022 <-
         t1010)
      CJUMP(EQ,
         t1022,
         CONST 0,
         invokebad_347, invokeok_356)
      LABEL invokeok_356
      MOVE(
         t1265 <-
         CALL(
            NAME(Tree_Insert),
            t1022,
            CONST 14))
      MOVE(
         t1011 <-
         t1265)
      MOVE(
         t1023 <-
         t1010)
      CJUMP(EQ,
         t1023,
         CONST 0,
         invokebad_347, invokeok_357)
      LABEL invokeok_357
      MOVE(
         t1266 <-
         CALL(
            NAME(Tree_Print),
            t1023))
      MOVE(
         t1011 <-
         t1266)
      MOVE(
         t1024 <-
         t1010)
      CJUMP(EQ,
         t1024,
         CONST 0,
         invokebad_347, invokeok_358)
      LABEL invokeok_358
      MOVE(
         t1267 <-
         CALL(
            NAME(Tree_Search),
            t1024,
            CONST 24))
      EXP(CALL(
         NAME(cs411println),
         t1267))
      MOVE(
         t1025 <-
         t1010)
      CJUMP(EQ,
         t1025,
         CONST 0,
         invokebad_347, invokeok_359)
      LABEL invokeok_359
      MOVE(
         t1268 <-
         CALL(
            NAME(Tree_Search),
            t1025,
            CONST 12))
      EXP(CALL(
         NAME(cs411println),
         t1268))
      MOVE(
         t1026 <-
         t1010)
      CJUMP(EQ,
         t1026,
         CONST 0,
         invokebad_347, invokeok_360)
      LABEL invokeok_360
      MOVE(
         t1269 <-
         CALL(
            NAME(Tree_Search),
            t1026,
            CONST 16))
      EXP(CALL(
         NAME(cs411println),
         t1269))
      MOVE(
         t1027 <-
         t1010)
      CJUMP(EQ,
         t1027,
         CONST 0,
         invokebad_347, invokeok_361)
      LABEL invokeok_361
      MOVE(
         t1270 <-
         CALL(
            NAME(Tree_Search),
            t1027,
            CONST 50))
      EXP(CALL(
         NAME(cs411println),
         t1270))
      MOVE(
         t1028 <-
         t1010)
      CJUMP(EQ,
         t1028,
         CONST 0,
         invokebad_347, invokeok_362)
      LABEL invokeok_362
      MOVE(
         t1271 <-
         CALL(
            NAME(Tree_Search),
            t1028,
            CONST 12))
      EXP(CALL(
         NAME(cs411println),
         t1271))
      MOVE(
         t1029 <-
         t1010)
      CJUMP(EQ,
         t1029,
         CONST 0,
         invokebad_347, invokeok_363)
      LABEL invokeok_363
      MOVE(
         t1272 <-
         CALL(
            NAME(Tree_Delete),
            t1029,
            CONST 12))
      MOVE(
         t1011 <-
         t1272)
      MOVE(
         t1030 <-
         t1010)
      CJUMP(EQ,
         t1030,
         CONST 0,
         invokebad_347, invokeok_364)
      LABEL invokeok_364
      MOVE(
         t1273 <-
         CALL(
            NAME(Tree_Print),
            t1030))
      MOVE(
         t1011 <-
         t1273)
      MOVE(
         t1031 <-
         t1010)
      CJUMP(EQ,
         t1031,
         CONST 0,
         invokebad_347, invokeok_365)
      LABEL invokeok_365
      MOVE(
         t1274 <-
         CALL(
            NAME(Tree_Search),
            t1031,
            CONST 12))
      EXP(CALL(
         NAME(cs411println),
         t1274))
      MOVE(
         %rax:%rax <-
         CONST 0)
      LABEL bail_345
      MOVE(
         %rbx:%rbx <-
         t1032)
      MOVE(
         %r12:%r12 <-
         t1033)
      MOVE(
         %r13:%r13 <-
         t1034)
      MOVE(
         %r14:%r14 <-
         t1035)
      MOVE(
         %r15:%r15 <-
         t1036)
      JUMP(NAME(DONE_521))
      LABEL invokebad_347
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      JUMP(NAME(bail_345))
      LABEL DONE_521
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Init
      nextLocalOffset = -8
      formals = List {
         t1037
         t1038
      }
   }
   List {
      LABEL L_522
      MOVE(
         t1039 <-
         %rbx:%rbx)
      MOVE(
         t1040 <-
         %r12:%r12)
      MOVE(
         t1041 <-
         %r13:%r13)
      MOVE(
         t1042 <-
         %r14:%r14)
      MOVE(
         t1043 <-
         %r15:%r15)
      MOVE(
         t1037 <-
         %rdi:%rdi)
      MOVE(
         t1038 <-
         %rsi:%rsi)
      MOVE(
         MEM(BINOP(PLUS,
            t1037, 
            CONST 16)) <-
         t1038)
      MOVE(
         MEM(BINOP(PLUS,
            t1037, 
            CONST 24)) <-
         CONST 0)
      MOVE(
         MEM(BINOP(PLUS,
            t1037, 
            CONST 32)) <-
         CONST 0)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_366
      MOVE(
         %rbx:%rbx <-
         t1039)
      MOVE(
         %r12:%r12 <-
         t1040)
      MOVE(
         %r13:%r13 <-
         t1041)
      MOVE(
         %r14:%r14 <-
         t1042)
      MOVE(
         %r15:%r15 <-
         t1043)
      LABEL DONE_523
   }
}
MethodFragment {
   X86_64Frame { label = Tree_SetRight
      nextLocalOffset = -8
      formals = List {
         t1044
         t1045
      }
   }
   List {
      LABEL L_524
      MOVE(
         t1046 <-
         %rbx:%rbx)
      MOVE(
         t1047 <-
         %r12:%r12)
      MOVE(
         t1048 <-
         %r13:%r13)
      MOVE(
         t1049 <-
         %r14:%r14)
      MOVE(
         t1050 <-
         %r15:%r15)
      MOVE(
         t1044 <-
         %rdi:%rdi)
      MOVE(
         t1045 <-
         %rsi:%rsi)
      MOVE(
         MEM(BINOP(PLUS,
            t1044, 
            CONST 8)) <-
         t1045)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_367
      MOVE(
         %rbx:%rbx <-
         t1046)
      MOVE(
         %r12:%r12 <-
         t1047)
      MOVE(
         %r13:%r13 <-
         t1048)
      MOVE(
         %r14:%r14 <-
         t1049)
      MOVE(
         %r15:%r15 <-
         t1050)
      LABEL DONE_525
   }
}
MethodFragment {
   X86_64Frame { label = Tree_SetLeft
      nextLocalOffset = -8
      formals = List {
         t1051
         t1052
      }
   }
   List {
      LABEL L_526
      MOVE(
         t1053 <-
         %rbx:%rbx)
      MOVE(
         t1054 <-
         %r12:%r12)
      MOVE(
         t1055 <-
         %r13:%r13)
      MOVE(
         t1056 <-
         %r14:%r14)
      MOVE(
         t1057 <-
         %r15:%r15)
      MOVE(
         t1051 <-
         %rdi:%rdi)
      MOVE(
         t1052 <-
         %rsi:%rsi)
      MOVE(
         MEM(t1051) <-
         t1052)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_368
      MOVE(
         %rbx:%rbx <-
         t1053)
      MOVE(
         %r12:%r12 <-
         t1054)
      MOVE(
         %r13:%r13 <-
         t1055)
      MOVE(
         %r14:%r14 <-
         t1056)
      MOVE(
         %r15:%r15 <-
         t1057)
      LABEL DONE_527
   }
}
MethodFragment {
   X86_64Frame { label = Tree_GetRight
      nextLocalOffset = -8
      formals = List {
         t1058
      }
   }
   List {
      LABEL L_528
      MOVE(
         t1059 <-
         %rbx:%rbx)
      MOVE(
         t1060 <-
         %r12:%r12)
      MOVE(
         t1061 <-
         %r13:%r13)
      MOVE(
         t1062 <-
         %r14:%r14)
      MOVE(
         t1063 <-
         %r15:%r15)
      MOVE(
         t1058 <-
         %rdi:%rdi)
      MOVE(
         %rax:%rax <-
         MEM(BINOP(PLUS,
            t1058, 
            CONST 8)))
      LABEL bail_369
      MOVE(
         %rbx:%rbx <-
         t1059)
      MOVE(
         %r12:%r12 <-
         t1060)
      MOVE(
         %r13:%r13 <-
         t1061)
      MOVE(
         %r14:%r14 <-
         t1062)
      MOVE(
         %r15:%r15 <-
         t1063)
      LABEL DONE_529
   }
}
MethodFragment {
   X86_64Frame { label = Tree_GetLeft
      nextLocalOffset = -8
      formals = List {
         t1064
      }
   }
   List {
      LABEL L_530
      MOVE(
         t1065 <-
         %rbx:%rbx)
      MOVE(
         t1066 <-
         %r12:%r12)
      MOVE(
         t1067 <-
         %r13:%r13)
      MOVE(
         t1068 <-
         %r14:%r14)
      MOVE(
         t1069 <-
         %r15:%r15)
      MOVE(
         t1064 <-
         %rdi:%rdi)
      MOVE(
         %rax:%rax <-
         MEM(t1064))
      LABEL bail_370
      MOVE(
         %rbx:%rbx <-
         t1065)
      MOVE(
         %r12:%r12 <-
         t1066)
      MOVE(
         %r13:%r13 <-
         t1067)
      MOVE(
         %r14:%r14 <-
         t1068)
      MOVE(
         %r15:%r15 <-
         t1069)
      LABEL DONE_531
   }
}
MethodFragment {
   X86_64Frame { label = Tree_GetKey
      nextLocalOffset = -8
      formals = List {
         t1070
      }
   }
   List {
      LABEL L_532
      MOVE(
         t1071 <-
         %rbx:%rbx)
      MOVE(
         t1072 <-
         %r12:%r12)
      MOVE(
         t1073 <-
         %r13:%r13)
      MOVE(
         t1074 <-
         %r14:%r14)
      MOVE(
         t1075 <-
         %r15:%r15)
      MOVE(
         t1070 <-
         %rdi:%rdi)
      MOVE(
         %rax:%rax <-
         MEM(BINOP(PLUS,
            t1070, 
            CONST 16)))
      LABEL bail_371
      MOVE(
         %rbx:%rbx <-
         t1071)
      MOVE(
         %r12:%r12 <-
         t1072)
      MOVE(
         %r13:%r13 <-
         t1073)
      MOVE(
         %r14:%r14 <-
         t1074)
      MOVE(
         %r15:%r15 <-
         t1075)
      LABEL DONE_533
   }
}
MethodFragment {
   X86_64Frame { label = Tree_SetKey
      nextLocalOffset = -8
      formals = List {
         t1076
         t1077
      }
   }
   List {
      LABEL L_534
      MOVE(
         t1078 <-
         %rbx:%rbx)
      MOVE(
         t1079 <-
         %r12:%r12)
      MOVE(
         t1080 <-
         %r13:%r13)
      MOVE(
         t1081 <-
         %r14:%r14)
      MOVE(
         t1082 <-
         %r15:%r15)
      MOVE(
         t1076 <-
         %rdi:%rdi)
      MOVE(
         t1077 <-
         %rsi:%rsi)
      MOVE(
         MEM(BINOP(PLUS,
            t1076, 
            CONST 16)) <-
         t1077)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_372
      MOVE(
         %rbx:%rbx <-
         t1078)
      MOVE(
         %r12:%r12 <-
         t1079)
      MOVE(
         %r13:%r13 <-
         t1080)
      MOVE(
         %r14:%r14 <-
         t1081)
      MOVE(
         %r15:%r15 <-
         t1082)
      LABEL DONE_535
   }
}
MethodFragment {
   X86_64Frame { label = Tree_GetHas_Right
      nextLocalOffset = -8
      formals = List {
         t1083
      }
   }
   List {
      LABEL L_536
      MOVE(
         t1084 <-
         %rbx:%rbx)
      MOVE(
         t1085 <-
         %r12:%r12)
      MOVE(
         t1086 <-
         %r13:%r13)
      MOVE(
         t1087 <-
         %r14:%r14)
      MOVE(
         t1088 <-
         %r15:%r15)
      MOVE(
         t1083 <-
         %rdi:%rdi)
      MOVE(
         %rax:%rax <-
         MEM(BINOP(PLUS,
            t1083, 
            CONST 32)))
      LABEL bail_373
      MOVE(
         %rbx:%rbx <-
         t1084)
      MOVE(
         %r12:%r12 <-
         t1085)
      MOVE(
         %r13:%r13 <-
         t1086)
      MOVE(
         %r14:%r14 <-
         t1087)
      MOVE(
         %r15:%r15 <-
         t1088)
      LABEL DONE_537
   }
}
MethodFragment {
   X86_64Frame { label = Tree_GetHas_Left
      nextLocalOffset = -8
      formals = List {
         t1089
      }
   }
   List {
      LABEL L_538
      MOVE(
         t1090 <-
         %rbx:%rbx)
      MOVE(
         t1091 <-
         %r12:%r12)
      MOVE(
         t1092 <-
         %r13:%r13)
      MOVE(
         t1093 <-
         %r14:%r14)
      MOVE(
         t1094 <-
         %r15:%r15)
      MOVE(
         t1089 <-
         %rdi:%rdi)
      MOVE(
         %rax:%rax <-
         MEM(BINOP(PLUS,
            t1089, 
            CONST 24)))
      LABEL bail_374
      MOVE(
         %rbx:%rbx <-
         t1090)
      MOVE(
         %r12:%r12 <-
         t1091)
      MOVE(
         %r13:%r13 <-
         t1092)
      MOVE(
         %r14:%r14 <-
         t1093)
      MOVE(
         %r15:%r15 <-
         t1094)
      LABEL DONE_539
   }
}
MethodFragment {
   X86_64Frame { label = Tree_SetHas_Left
      nextLocalOffset = -8
      formals = List {
         t1095
         t1096
      }
   }
   List {
      LABEL L_540
      MOVE(
         t1097 <-
         %rbx:%rbx)
      MOVE(
         t1098 <-
         %r12:%r12)
      MOVE(
         t1099 <-
         %r13:%r13)
      MOVE(
         t1100 <-
         %r14:%r14)
      MOVE(
         t1101 <-
         %r15:%r15)
      MOVE(
         t1095 <-
         %rdi:%rdi)
      MOVE(
         t1096 <-
         %rsi:%rsi)
      MOVE(
         MEM(BINOP(PLUS,
            t1095, 
            CONST 24)) <-
         t1096)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_375
      MOVE(
         %rbx:%rbx <-
         t1097)
      MOVE(
         %r12:%r12 <-
         t1098)
      MOVE(
         %r13:%r13 <-
         t1099)
      MOVE(
         %r14:%r14 <-
         t1100)
      MOVE(
         %r15:%r15 <-
         t1101)
      LABEL DONE_541
   }
}
MethodFragment {
   X86_64Frame { label = Tree_SetHas_Right
      nextLocalOffset = -8
      formals = List {
         t1102
         t1103
      }
   }
   List {
      LABEL L_542
      MOVE(
         t1104 <-
         %rbx:%rbx)
      MOVE(
         t1105 <-
         %r12:%r12)
      MOVE(
         t1106 <-
         %r13:%r13)
      MOVE(
         t1107 <-
         %r14:%r14)
      MOVE(
         t1108 <-
         %r15:%r15)
      MOVE(
         t1102 <-
         %rdi:%rdi)
      MOVE(
         t1103 <-
         %rsi:%rsi)
      MOVE(
         MEM(BINOP(PLUS,
            t1102, 
            CONST 32)) <-
         t1103)
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_376
      MOVE(
         %rbx:%rbx <-
         t1104)
      MOVE(
         %r12:%r12 <-
         t1105)
      MOVE(
         %r13:%r13 <-
         t1106)
      MOVE(
         %r14:%r14 <-
         t1107)
      MOVE(
         %r15:%r15 <-
         t1108)
      LABEL DONE_543
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Compare
      nextLocalOffset = -8
      formals = List {
         t1109
         t1110
         t1111
      }
   }
   List {
      LABEL L_544
      MOVE(
         t1114 <-
         %rbx:%rbx)
      MOVE(
         t1115 <-
         %r12:%r12)
      MOVE(
         t1116 <-
         %r13:%r13)
      MOVE(
         t1117 <-
         %r14:%r14)
      MOVE(
         t1118 <-
         %r15:%r15)
      MOVE(
         t1109 <-
         %rdi:%rdi)
      MOVE(
         t1110 <-
         %rsi:%rsi)
      MOVE(
         t1111 <-
         %rdx:%rdx)
      MOVE(
         t1112 <-
         CONST 0)
      MOVE(
         t1113 <-
         BINOP(PLUS,
            t1111, 
            CONST 1))
      CJUMP(GE,
         t1110,
         t1111,
         iffalse_379, iftrue_378)
      LABEL iftrue_378
      MOVE(
         t1112 <-
         CONST 0)
      LABEL endif_380
      MOVE(
         %rax:%rax <-
         t1112)
      LABEL bail_377
      MOVE(
         %rbx:%rbx <-
         t1114)
      MOVE(
         %r12:%r12 <-
         t1115)
      MOVE(
         %r13:%r13 <-
         t1116)
      MOVE(
         %r14:%r14 <-
         t1117)
      MOVE(
         %r15:%r15 <-
         t1118)
      JUMP(NAME(DONE_545))
      LABEL iffalse_379
      CJUMP(GE,
         t1110,
         t1113,
         iftrue_381, iffalse_382)
      LABEL iffalse_382
      MOVE(
         t1112 <-
         CONST 1)
      LABEL endif_383
      JUMP(NAME(endif_380))
      LABEL iftrue_381
      MOVE(
         t1112 <-
         CONST 0)
      JUMP(NAME(endif_383))
      LABEL DONE_545
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Insert
      nextLocalOffset = -8
      formals = List {
         t1119
         t1120
      }
   }
   List {
      LABEL L_546
      MOVE(
         t1136 <-
         %rbx:%rbx)
      MOVE(
         t1137 <-
         %r12:%r12)
      MOVE(
         t1138 <-
         %r13:%r13)
      MOVE(
         t1139 <-
         %r14:%r14)
      MOVE(
         t1140 <-
         %r15:%r15)
      MOVE(
         t1119 <-
         %rdi:%rdi)
      MOVE(
         t1120 <-
         %rsi:%rsi)
      MOVE(
         t1121 <-
         CONST 0)
      MOVE(
         t1125 <-
         CONST 0)
      MOVE(
         t1121 <-
         CALL(
            NAME(cs411newobject),
            CONST 48))
      MOVE(
         t1126 <-
         t1121)
      CJUMP(EQ,
         t1126,
         CONST 0,
         invokebad_386, invokeok_385)
      LABEL invokeok_385
      MOVE(
         t1275 <-
         CALL(
            NAME(Tree_Init),
            t1126,
            t1120))
      MOVE(
         t1122 <-
         t1275)
      MOVE(
         t1125 <-
         t1119)
      MOVE(
         t1123 <-
         CONST 1)
      LABEL looptest_389
      CJUMP(EQ,
         t1123,
         CONST 0,
         loopend_387, loopbody_388)
      LABEL loopbody_388
      MOVE(
         t1127 <-
         t1125)
      CJUMP(EQ,
         t1127,
         CONST 0,
         invokebad_386, invokeok_390)
      LABEL invokeok_390
      MOVE(
         t1276 <-
         CALL(
            NAME(Tree_GetKey),
            t1127))
      MOVE(
         t1124 <-
         t1276)
      CJUMP(GE,
         t1120,
         t1124,
         iffalse_392, iftrue_391)
      LABEL iftrue_391
      MOVE(
         t1128 <-
         t1125)
      CJUMP(EQ,
         t1128,
         CONST 0,
         invokebad_386, invokeok_397)
      LABEL invokeok_397
      MOVE(
         t1277 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1128))
      CJUMP(EQ,
         t1277,
         CONST 0,
         iffalse_395, iftrue_394)
      LABEL iftrue_394
      MOVE(
         t1129 <-
         t1125)
      CJUMP(EQ,
         t1129,
         CONST 0,
         invokebad_386, invokeok_398)
      LABEL invokeok_398
      MOVE(
         t1278 <-
         CALL(
            NAME(Tree_GetLeft),
            t1129))
      MOVE(
         t1125 <-
         t1278)
      LABEL endif_396
      LABEL endif_393
      JUMP(NAME(looptest_389))
      LABEL invokebad_386
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      LABEL bail_384
      MOVE(
         %rbx:%rbx <-
         t1136)
      MOVE(
         %r12:%r12 <-
         t1137)
      MOVE(
         %r13:%r13 <-
         t1138)
      MOVE(
         %r14:%r14 <-
         t1139)
      MOVE(
         %r15:%r15 <-
         t1140)
      JUMP(NAME(DONE_547))
      LABEL iffalse_395
      MOVE(
         t1123 <-
         CONST 0)
      MOVE(
         t1130 <-
         t1125)
      CJUMP(EQ,
         t1130,
         CONST 0,
         invokebad_386, invokeok_399)
      LABEL invokeok_399
      MOVE(
         t1279 <-
         CALL(
            NAME(Tree_SetHas_Left),
            t1130,
            CONST 1))
      MOVE(
         t1122 <-
         t1279)
      MOVE(
         t1131 <-
         t1125)
      CJUMP(EQ,
         t1131,
         CONST 0,
         invokebad_386, invokeok_400)
      LABEL invokeok_400
      MOVE(
         t1280 <-
         CALL(
            NAME(Tree_SetLeft),
            t1131,
            t1121))
      MOVE(
         t1122 <-
         t1280)
      JUMP(NAME(endif_396))
      LABEL iffalse_392
      MOVE(
         t1132 <-
         t1125)
      CJUMP(EQ,
         t1132,
         CONST 0,
         invokebad_386, invokeok_404)
      LABEL invokeok_404
      MOVE(
         t1281 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1132))
      CJUMP(EQ,
         t1281,
         CONST 0,
         iffalse_402, iftrue_401)
      LABEL iftrue_401
      MOVE(
         t1133 <-
         t1125)
      CJUMP(EQ,
         t1133,
         CONST 0,
         invokebad_386, invokeok_405)
      LABEL invokeok_405
      MOVE(
         t1282 <-
         CALL(
            NAME(Tree_GetRight),
            t1133))
      MOVE(
         t1125 <-
         t1282)
      LABEL endif_403
      JUMP(NAME(endif_393))
      LABEL iffalse_402
      MOVE(
         t1123 <-
         CONST 0)
      MOVE(
         t1134 <-
         t1125)
      CJUMP(EQ,
         t1134,
         CONST 0,
         invokebad_386, invokeok_406)
      LABEL invokeok_406
      MOVE(
         t1283 <-
         CALL(
            NAME(Tree_SetHas_Right),
            t1134,
            CONST 1))
      MOVE(
         t1122 <-
         t1283)
      MOVE(
         t1135 <-
         t1125)
      CJUMP(EQ,
         t1135,
         CONST 0,
         invokebad_386, invokeok_407)
      LABEL invokeok_407
      MOVE(
         t1284 <-
         CALL(
            NAME(Tree_SetRight),
            t1135,
            t1121))
      MOVE(
         t1122 <-
         t1284)
      JUMP(NAME(endif_403))
      LABEL loopend_387
      MOVE(
         %rax:%rax <-
         CONST 1)
      JUMP(NAME(bail_384))
      LABEL DONE_547
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Delete
      nextLocalOffset = -8
      formals = List {
         t1141
         t1142
      }
   }
   List {
      LABEL L_548
      MOVE(
         t1157 <-
         %rbx:%rbx)
      MOVE(
         t1158 <-
         %r12:%r12)
      MOVE(
         t1159 <-
         %r13:%r13)
      MOVE(
         t1160 <-
         %r14:%r14)
      MOVE(
         t1161 <-
         %r15:%r15)
      MOVE(
         t1141 <-
         %rdi:%rdi)
      MOVE(
         t1142 <-
         %rsi:%rsi)
      MOVE(
         t1143 <-
         CONST 0)
      MOVE(
         t1144 <-
         CONST 0)
      MOVE(
         t1143 <-
         t1141)
      MOVE(
         t1144 <-
         t1141)
      MOVE(
         t1145 <-
         CONST 1)
      MOVE(
         t1146 <-
         CONST 0)
      MOVE(
         t1147 <-
         CONST 1)
      LABEL looptest_411
      CJUMP(EQ,
         t1145,
         CONST 0,
         loopend_409, loopbody_410)
      LABEL loopbody_410
      MOVE(
         t1150 <-
         t1143)
      CJUMP(EQ,
         t1150,
         CONST 0,
         invokebad_413, invokeok_412)
      LABEL invokeok_412
      MOVE(
         t1285 <-
         CALL(
            NAME(Tree_GetKey),
            t1150))
      MOVE(
         t1148 <-
         t1285)
      CJUMP(GE,
         t1142,
         t1148,
         iffalse_415, iftrue_414)
      LABEL iftrue_414
      MOVE(
         t1151 <-
         t1143)
      CJUMP(EQ,
         t1151,
         CONST 0,
         invokebad_413, invokeok_420)
      LABEL invokeok_420
      MOVE(
         t1286 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1151))
      CJUMP(EQ,
         t1286,
         CONST 0,
         iffalse_418, iftrue_417)
      LABEL iftrue_417
      MOVE(
         t1144 <-
         t1143)
      MOVE(
         t1152 <-
         t1143)
      CJUMP(EQ,
         t1152,
         CONST 0,
         invokebad_413, invokeok_421)
      LABEL invokeok_421
      MOVE(
         t1287 <-
         CALL(
            NAME(Tree_GetLeft),
            t1152))
      MOVE(
         t1143 <-
         t1287)
      LABEL endif_419
      LABEL endif_416
      MOVE(
         t1147 <-
         CONST 0)
      JUMP(NAME(looptest_411))
      LABEL invokebad_413
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      LABEL bail_408
      MOVE(
         %rbx:%rbx <-
         t1157)
      MOVE(
         %r12:%r12 <-
         t1158)
      MOVE(
         %r13:%r13 <-
         t1159)
      MOVE(
         %r14:%r14 <-
         t1160)
      MOVE(
         %r15:%r15 <-
         t1161)
      JUMP(NAME(DONE_549))
      LABEL iffalse_418
      MOVE(
         t1145 <-
         CONST 0)
      JUMP(NAME(endif_419))
      LABEL iffalse_415
      CJUMP(GE,
         t1148,
         t1142,
         iffalse_423, iftrue_422)
      LABEL iftrue_422
      MOVE(
         t1153 <-
         t1143)
      CJUMP(EQ,
         t1153,
         CONST 0,
         invokebad_413, invokeok_428)
      LABEL invokeok_428
      MOVE(
         t1288 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1153))
      CJUMP(EQ,
         t1288,
         CONST 0,
         iffalse_426, iftrue_425)
      LABEL iftrue_425
      MOVE(
         t1144 <-
         t1143)
      MOVE(
         t1154 <-
         t1143)
      CJUMP(EQ,
         t1154,
         CONST 0,
         invokebad_413, invokeok_429)
      LABEL invokeok_429
      MOVE(
         t1289 <-
         CALL(
            NAME(Tree_GetRight),
            t1154))
      MOVE(
         t1143 <-
         t1289)
      LABEL endif_427
      LABEL endif_424
      JUMP(NAME(endif_416))
      LABEL iffalse_426
      MOVE(
         t1145 <-
         CONST 0)
      JUMP(NAME(endif_427))
      LABEL iffalse_423
      CJUMP(EQ,
         t1147,
         CONST 0,
         iffalse_431, iftrue_430)
      LABEL iftrue_430
      MOVE(
         t1155 <-
         t1143)
      CJUMP(EQ,
         t1155,
         CONST 0,
         invokebad_413, invokeok_436)
      LABEL invokeok_436
      MOVE(
         t1290 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1155))
      CJUMP(EQ,
         t1290,
         CONST 0,
         doright_438, iffalse_434)
      LABEL iffalse_434
      MOVE(
         t1149 <-
         CALL(
            NAME(Tree_Remove),
            t1141,
            t1144,
            t1143))
      LABEL endif_435
      LABEL endif_432
      MOVE(
         t1146 <-
         CONST 1)
      MOVE(
         t1145 <-
         CONST 0)
      JUMP(NAME(endif_424))
      LABEL doright_438
      MOVE(
         t1156 <-
         t1143)
      CJUMP(EQ,
         t1156,
         CONST 0,
         invokebad_413, invokeok_437)
      LABEL invokeok_437
      MOVE(
         t1291 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1156))
      CJUMP(NE,
         t1291,
         CONST 0,
         iffalse_434, iftrue_433)
      LABEL iftrue_433
      MOVE(
         t1149 <-
         CONST 1)
      JUMP(NAME(endif_435))
      LABEL iffalse_431
      MOVE(
         t1149 <-
         CALL(
            NAME(Tree_Remove),
            t1141,
            t1144,
            t1143))
      JUMP(NAME(endif_432))
      LABEL loopend_409
      MOVE(
         %rax:%rax <-
         t1146)
      JUMP(NAME(bail_408))
      LABEL DONE_549
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Remove
      nextLocalOffset = -8
      formals = List {
         t1162
         t1163
         t1164
      }
   }
   List {
      LABEL L_550
      MOVE(
         t1177 <-
         %rbx:%rbx)
      MOVE(
         t1178 <-
         %r12:%r12)
      MOVE(
         t1179 <-
         %r13:%r13)
      MOVE(
         t1180 <-
         %r14:%r14)
      MOVE(
         t1181 <-
         %r15:%r15)
      MOVE(
         t1162 <-
         %rdi:%rdi)
      MOVE(
         t1163 <-
         %rsi:%rsi)
      MOVE(
         t1164 <-
         %rdx:%rdx)
      MOVE(
         t1168 <-
         t1164)
      CJUMP(EQ,
         t1168,
         CONST 0,
         invokebad_444, invokeok_443)
      LABEL invokeok_443
      MOVE(
         t1292 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1168))
      CJUMP(EQ,
         t1292,
         CONST 0,
         iffalse_441, iftrue_440)
      LABEL iftrue_440
      MOVE(
         t1165 <-
         CALL(
            NAME(Tree_RemoveLeft),
            t1162,
            t1163,
            t1164))
      LABEL endif_442
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_439
      MOVE(
         %rbx:%rbx <-
         t1177)
      MOVE(
         %r12:%r12 <-
         t1178)
      MOVE(
         %r13:%r13 <-
         t1179)
      MOVE(
         %r14:%r14 <-
         t1180)
      MOVE(
         %r15:%r15 <-
         t1181)
      JUMP(NAME(DONE_551))
      LABEL invokebad_444
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      JUMP(NAME(bail_439))
      LABEL iffalse_441
      MOVE(
         t1169 <-
         t1164)
      CJUMP(EQ,
         t1169,
         CONST 0,
         invokebad_444, invokeok_448)
      LABEL invokeok_448
      MOVE(
         t1293 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1169))
      CJUMP(EQ,
         t1293,
         CONST 0,
         iffalse_446, iftrue_445)
      LABEL iftrue_445
      MOVE(
         t1165 <-
         CALL(
            NAME(Tree_RemoveRight),
            t1162,
            t1163,
            t1164))
      LABEL endif_447
      JUMP(NAME(endif_442))
      LABEL iffalse_446
      MOVE(
         t1170 <-
         t1164)
      CJUMP(EQ,
         t1170,
         CONST 0,
         invokebad_444, invokeok_449)
      LABEL invokeok_449
      MOVE(
         t1294 <-
         CALL(
            NAME(Tree_GetKey),
            t1170))
      MOVE(
         t1166 <-
         t1294)
      MOVE(
         t1171 <-
         t1163)
      CJUMP(EQ,
         t1171,
         CONST 0,
         invokebad_444, invokeok_450)
      LABEL invokeok_450
      MOVE(
         t1295 <-
         CALL(
            NAME(Tree_GetLeft),
            t1171))
      MOVE(
         t1172 <-
         t1295)
      CJUMP(EQ,
         t1172,
         CONST 0,
         invokebad_444, invokeok_451)
      LABEL invokeok_451
      MOVE(
         t1296 <-
         CALL(
            NAME(Tree_GetKey),
            t1172))
      MOVE(
         t1167 <-
         t1296)
      MOVE(
         t1297 <-
         CALL(
            NAME(Tree_Compare),
            t1162,
            t1166,
            t1167))
      CJUMP(EQ,
         t1297,
         CONST 0,
         iffalse_453, iftrue_452)
      LABEL iftrue_452
      MOVE(
         t1173 <-
         t1163)
      CJUMP(EQ,
         t1173,
         CONST 0,
         invokebad_444, invokeok_455)
      LABEL invokeok_455
      MOVE(
         t1298 <-
         CALL(
            NAME(Tree_SetLeft),
            t1173,
            MEM(BINOP(PLUS,
               t1162, 
               CONST 40))))
      MOVE(
         t1165 <-
         t1298)
      MOVE(
         t1174 <-
         t1163)
      CJUMP(EQ,
         t1174,
         CONST 0,
         invokebad_444, invokeok_456)
      LABEL invokeok_456
      MOVE(
         t1299 <-
         CALL(
            NAME(Tree_SetHas_Left),
            t1174,
            CONST 0))
      MOVE(
         t1165 <-
         t1299)
      LABEL endif_454
      JUMP(NAME(endif_447))
      LABEL iffalse_453
      MOVE(
         t1175 <-
         t1163)
      CJUMP(EQ,
         t1175,
         CONST 0,
         invokebad_444, invokeok_457)
      LABEL invokeok_457
      MOVE(
         t1300 <-
         CALL(
            NAME(Tree_SetRight),
            t1175,
            MEM(BINOP(PLUS,
               t1162, 
               CONST 40))))
      MOVE(
         t1165 <-
         t1300)
      MOVE(
         t1176 <-
         t1163)
      CJUMP(EQ,
         t1176,
         CONST 0,
         invokebad_444, invokeok_458)
      LABEL invokeok_458
      MOVE(
         t1301 <-
         CALL(
            NAME(Tree_SetHas_Right),
            t1176,
            CONST 0))
      MOVE(
         t1165 <-
         t1301)
      JUMP(NAME(endif_454))
      LABEL DONE_551
   }
}
MethodFragment {
   X86_64Frame { label = Tree_RemoveRight
      nextLocalOffset = -8
      formals = List {
         t1182
         t1183
         t1184
      }
   }
   List {
      LABEL L_552
      MOVE(
         t1193 <-
         %rbx:%rbx)
      MOVE(
         t1194 <-
         %r12:%r12)
      MOVE(
         t1195 <-
         %r13:%r13)
      MOVE(
         t1196 <-
         %r14:%r14)
      MOVE(
         t1197 <-
         %r15:%r15)
      MOVE(
         t1182 <-
         %rdi:%rdi)
      MOVE(
         t1183 <-
         %rsi:%rsi)
      MOVE(
         t1184 <-
         %rdx:%rdx)
      LABEL looptest_462
      MOVE(
         t1186 <-
         t1184)
      CJUMP(EQ,
         t1186,
         CONST 0,
         invokebad_464, invokeok_463)
      LABEL invokeok_463
      MOVE(
         t1302 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1186))
      CJUMP(EQ,
         t1302,
         CONST 0,
         loopend_460, loopbody_461)
      LABEL loopbody_461
      MOVE(
         t1187 <-
         t1184)
      CJUMP(EQ,
         t1187,
         CONST 0,
         invokebad_464, invokeok_465)
      LABEL invokeok_465
      MOVE(
         t1306 <-
         t1187)
      MOVE(
         t1188 <-
         t1184)
      CJUMP(EQ,
         t1188,
         CONST 0,
         invokebad_464, invokeok_466)
      LABEL invokeok_466
      MOVE(
         t1304 <-
         CALL(
            NAME(Tree_GetRight),
            t1188))
      MOVE(
         t1189 <-
         t1304)
      CJUMP(EQ,
         t1189,
         CONST 0,
         invokebad_464, invokeok_467)
      LABEL invokeok_467
      MOVE(
         t1305 <-
         CALL(
            NAME(Tree_GetKey),
            t1189))
      MOVE(
         t1303 <-
         CALL(
            NAME(Tree_SetKey),
            t1306,
            t1305))
      MOVE(
         t1185 <-
         t1303)
      MOVE(
         t1183 <-
         t1184)
      MOVE(
         t1190 <-
         t1184)
      CJUMP(EQ,
         t1190,
         CONST 0,
         invokebad_464, invokeok_468)
      LABEL invokeok_468
      MOVE(
         t1307 <-
         CALL(
            NAME(Tree_GetRight),
            t1190))
      MOVE(
         t1184 <-
         t1307)
      JUMP(NAME(looptest_462))
      LABEL invokebad_464
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      LABEL bail_459
      MOVE(
         %rbx:%rbx <-
         t1193)
      MOVE(
         %r12:%r12 <-
         t1194)
      MOVE(
         %r13:%r13 <-
         t1195)
      MOVE(
         %r14:%r14 <-
         t1196)
      MOVE(
         %r15:%r15 <-
         t1197)
      JUMP(NAME(DONE_553))
      LABEL loopend_460
      MOVE(
         t1191 <-
         t1183)
      CJUMP(EQ,
         t1191,
         CONST 0,
         invokebad_464, invokeok_469)
      LABEL invokeok_469
      MOVE(
         t1308 <-
         CALL(
            NAME(Tree_SetRight),
            t1191,
            MEM(BINOP(PLUS,
               t1182, 
               CONST 40))))
      MOVE(
         t1185 <-
         t1308)
      MOVE(
         t1192 <-
         t1183)
      CJUMP(EQ,
         t1192,
         CONST 0,
         invokebad_464, invokeok_470)
      LABEL invokeok_470
      MOVE(
         t1309 <-
         CALL(
            NAME(Tree_SetHas_Right),
            t1192,
            CONST 0))
      MOVE(
         t1185 <-
         t1309)
      MOVE(
         %rax:%rax <-
         CONST 1)
      JUMP(NAME(bail_459))
      LABEL DONE_553
   }
}
MethodFragment {
   X86_64Frame { label = Tree_RemoveLeft
      nextLocalOffset = -8
      formals = List {
         t1198
         t1199
         t1200
      }
   }
   List {
      LABEL L_554
      MOVE(
         t1209 <-
         %rbx:%rbx)
      MOVE(
         t1210 <-
         %r12:%r12)
      MOVE(
         t1211 <-
         %r13:%r13)
      MOVE(
         t1212 <-
         %r14:%r14)
      MOVE(
         t1213 <-
         %r15:%r15)
      MOVE(
         t1198 <-
         %rdi:%rdi)
      MOVE(
         t1199 <-
         %rsi:%rsi)
      MOVE(
         t1200 <-
         %rdx:%rdx)
      LABEL looptest_474
      MOVE(
         t1202 <-
         t1200)
      CJUMP(EQ,
         t1202,
         CONST 0,
         invokebad_476, invokeok_475)
      LABEL invokeok_475
      MOVE(
         t1310 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1202))
      CJUMP(EQ,
         t1310,
         CONST 0,
         loopend_472, loopbody_473)
      LABEL loopbody_473
      MOVE(
         t1203 <-
         t1200)
      CJUMP(EQ,
         t1203,
         CONST 0,
         invokebad_476, invokeok_477)
      LABEL invokeok_477
      MOVE(
         t1314 <-
         t1203)
      MOVE(
         t1204 <-
         t1200)
      CJUMP(EQ,
         t1204,
         CONST 0,
         invokebad_476, invokeok_478)
      LABEL invokeok_478
      MOVE(
         t1312 <-
         CALL(
            NAME(Tree_GetLeft),
            t1204))
      MOVE(
         t1205 <-
         t1312)
      CJUMP(EQ,
         t1205,
         CONST 0,
         invokebad_476, invokeok_479)
      LABEL invokeok_479
      MOVE(
         t1313 <-
         CALL(
            NAME(Tree_GetKey),
            t1205))
      MOVE(
         t1311 <-
         CALL(
            NAME(Tree_SetKey),
            t1314,
            t1313))
      MOVE(
         t1201 <-
         t1311)
      MOVE(
         t1199 <-
         t1200)
      MOVE(
         t1206 <-
         t1200)
      CJUMP(EQ,
         t1206,
         CONST 0,
         invokebad_476, invokeok_480)
      LABEL invokeok_480
      MOVE(
         t1315 <-
         CALL(
            NAME(Tree_GetLeft),
            t1206))
      MOVE(
         t1200 <-
         t1315)
      JUMP(NAME(looptest_474))
      LABEL invokebad_476
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      LABEL bail_471
      MOVE(
         %rbx:%rbx <-
         t1209)
      MOVE(
         %r12:%r12 <-
         t1210)
      MOVE(
         %r13:%r13 <-
         t1211)
      MOVE(
         %r14:%r14 <-
         t1212)
      MOVE(
         %r15:%r15 <-
         t1213)
      JUMP(NAME(DONE_555))
      LABEL loopend_472
      MOVE(
         t1207 <-
         t1199)
      CJUMP(EQ,
         t1207,
         CONST 0,
         invokebad_476, invokeok_481)
      LABEL invokeok_481
      MOVE(
         t1316 <-
         CALL(
            NAME(Tree_SetLeft),
            t1207,
            MEM(BINOP(PLUS,
               t1198, 
               CONST 40))))
      MOVE(
         t1201 <-
         t1316)
      MOVE(
         t1208 <-
         t1199)
      CJUMP(EQ,
         t1208,
         CONST 0,
         invokebad_476, invokeok_482)
      LABEL invokeok_482
      MOVE(
         t1317 <-
         CALL(
            NAME(Tree_SetHas_Left),
            t1208,
            CONST 0))
      MOVE(
         t1201 <-
         t1317)
      MOVE(
         %rax:%rax <-
         CONST 1)
      JUMP(NAME(bail_471))
      LABEL DONE_555
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Search
      nextLocalOffset = -8
      formals = List {
         t1214
         t1215
      }
   }
   List {
      LABEL L_556
      MOVE(
         t1225 <-
         %rbx:%rbx)
      MOVE(
         t1226 <-
         %r12:%r12)
      MOVE(
         t1227 <-
         %r13:%r13)
      MOVE(
         t1228 <-
         %r14:%r14)
      MOVE(
         t1229 <-
         %r15:%r15)
      MOVE(
         t1214 <-
         %rdi:%rdi)
      MOVE(
         t1215 <-
         %rsi:%rsi)
      MOVE(
         t1218 <-
         CONST 0)
      MOVE(
         t1218 <-
         t1214)
      MOVE(
         t1216 <-
         CONST 1)
      MOVE(
         t1217 <-
         CONST 0)
      LABEL looptest_486
      CJUMP(EQ,
         t1216,
         CONST 0,
         loopend_484, loopbody_485)
      LABEL loopbody_485
      MOVE(
         t1220 <-
         t1218)
      CJUMP(EQ,
         t1220,
         CONST 0,
         invokebad_488, invokeok_487)
      LABEL invokeok_487
      MOVE(
         t1318 <-
         CALL(
            NAME(Tree_GetKey),
            t1220))
      MOVE(
         t1219 <-
         t1318)
      CJUMP(GE,
         t1215,
         t1219,
         iffalse_490, iftrue_489)
      LABEL iftrue_489
      MOVE(
         t1221 <-
         t1218)
      CJUMP(EQ,
         t1221,
         CONST 0,
         invokebad_488, invokeok_495)
      LABEL invokeok_495
      MOVE(
         t1319 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1221))
      CJUMP(EQ,
         t1319,
         CONST 0,
         iffalse_493, iftrue_492)
      LABEL iftrue_492
      MOVE(
         t1222 <-
         t1218)
      CJUMP(EQ,
         t1222,
         CONST 0,
         invokebad_488, invokeok_496)
      LABEL invokeok_496
      MOVE(
         t1320 <-
         CALL(
            NAME(Tree_GetLeft),
            t1222))
      MOVE(
         t1218 <-
         t1320)
      LABEL endif_494
      LABEL endif_491
      JUMP(NAME(looptest_486))
      LABEL invokebad_488
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      LABEL bail_483
      MOVE(
         %rbx:%rbx <-
         t1225)
      MOVE(
         %r12:%r12 <-
         t1226)
      MOVE(
         %r13:%r13 <-
         t1227)
      MOVE(
         %r14:%r14 <-
         t1228)
      MOVE(
         %r15:%r15 <-
         t1229)
      JUMP(NAME(DONE_557))
      LABEL iffalse_493
      MOVE(
         t1216 <-
         CONST 0)
      JUMP(NAME(endif_494))
      LABEL iffalse_490
      CJUMP(GE,
         t1219,
         t1215,
         iffalse_498, iftrue_497)
      LABEL iftrue_497
      MOVE(
         t1223 <-
         t1218)
      CJUMP(EQ,
         t1223,
         CONST 0,
         invokebad_488, invokeok_503)
      LABEL invokeok_503
      MOVE(
         t1321 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1223))
      CJUMP(EQ,
         t1321,
         CONST 0,
         iffalse_501, iftrue_500)
      LABEL iftrue_500
      MOVE(
         t1224 <-
         t1218)
      CJUMP(EQ,
         t1224,
         CONST 0,
         invokebad_488, invokeok_504)
      LABEL invokeok_504
      MOVE(
         t1322 <-
         CALL(
            NAME(Tree_GetRight),
            t1224))
      MOVE(
         t1218 <-
         t1322)
      LABEL endif_502
      LABEL endif_499
      JUMP(NAME(endif_491))
      LABEL iffalse_501
      MOVE(
         t1216 <-
         CONST 0)
      JUMP(NAME(endif_502))
      LABEL iffalse_498
      MOVE(
         t1217 <-
         CONST 1)
      MOVE(
         t1216 <-
         CONST 0)
      JUMP(NAME(endif_499))
      LABEL loopend_484
      MOVE(
         %rax:%rax <-
         t1217)
      JUMP(NAME(bail_483))
      LABEL DONE_557
   }
}
MethodFragment {
   X86_64Frame { label = Tree_Print
      nextLocalOffset = -8
      formals = List {
         t1230
      }
   }
   List {
      LABEL L_558
      MOVE(
         t1233 <-
         %rbx:%rbx)
      MOVE(
         t1234 <-
         %r12:%r12)
      MOVE(
         t1235 <-
         %r13:%r13)
      MOVE(
         t1236 <-
         %r14:%r14)
      MOVE(
         t1237 <-
         %r15:%r15)
      MOVE(
         t1230 <-
         %rdi:%rdi)
      MOVE(
         t1231 <-
         CONST 0)
      MOVE(
         t1231 <-
         t1230)
      MOVE(
         t1232 <-
         CALL(
            NAME(Tree_RecPrint),
            t1230,
            t1231))
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_505
      MOVE(
         %rbx:%rbx <-
         t1233)
      MOVE(
         %r12:%r12 <-
         t1234)
      MOVE(
         %r13:%r13 <-
         t1235)
      MOVE(
         %r14:%r14 <-
         t1236)
      MOVE(
         %r15:%r15 <-
         t1237)
      LABEL DONE_559
   }
}
MethodFragment {
   X86_64Frame { label = Tree_RecPrint
      nextLocalOffset = -8
      formals = List {
         t1238
         t1239
      }
   }
   List {
      LABEL L_560
      MOVE(
         t1246 <-
         %rbx:%rbx)
      MOVE(
         t1247 <-
         %r12:%r12)
      MOVE(
         t1248 <-
         %r13:%r13)
      MOVE(
         t1249 <-
         %r14:%r14)
      MOVE(
         t1250 <-
         %r15:%r15)
      MOVE(
         t1238 <-
         %rdi:%rdi)
      MOVE(
         t1239 <-
         %rsi:%rsi)
      MOVE(
         t1241 <-
         t1239)
      CJUMP(EQ,
         t1241,
         CONST 0,
         invokebad_511, invokeok_510)
      LABEL invokeok_510
      MOVE(
         t1323 <-
         CALL(
            NAME(Tree_GetHas_Left),
            t1241))
      CJUMP(EQ,
         t1323,
         CONST 0,
         iffalse_508, iftrue_507)
      LABEL iftrue_507
      MOVE(
         t1325 <-
         t1238)
      MOVE(
         t1242 <-
         t1239)
      CJUMP(EQ,
         t1242,
         CONST 0,
         invokebad_511, invokeok_512)
      LABEL invokeok_512
      MOVE(
         t1324 <-
         CALL(
            NAME(Tree_GetLeft),
            t1242))
      MOVE(
         t1240 <-
         CALL(
            NAME(Tree_RecPrint),
            t1325,
            t1324))
      LABEL endif_509
      MOVE(
         t1243 <-
         t1239)
      CJUMP(EQ,
         t1243,
         CONST 0,
         invokebad_511, invokeok_513)
      LABEL invokeok_513
      MOVE(
         t1326 <-
         CALL(
            NAME(Tree_GetKey),
            t1243))
      EXP(CALL(
         NAME(cs411println),
         t1326))
      MOVE(
         t1244 <-
         t1239)
      CJUMP(EQ,
         t1244,
         CONST 0,
         invokebad_511, invokeok_517)
      LABEL invokeok_517
      MOVE(
         t1327 <-
         CALL(
            NAME(Tree_GetHas_Right),
            t1244))
      CJUMP(EQ,
         t1327,
         CONST 0,
         iffalse_515, iftrue_514)
      LABEL iftrue_514
      MOVE(
         t1329 <-
         t1238)
      MOVE(
         t1245 <-
         t1239)
      CJUMP(EQ,
         t1245,
         CONST 0,
         invokebad_511, invokeok_518)
      LABEL invokeok_518
      MOVE(
         t1328 <-
         CALL(
            NAME(Tree_GetRight),
            t1245))
      MOVE(
         t1240 <-
         CALL(
            NAME(Tree_RecPrint),
            t1329,
            t1328))
      LABEL endif_516
      MOVE(
         %rax:%rax <-
         CONST 1)
      LABEL bail_506
      MOVE(
         %rbx:%rbx <-
         t1246)
      MOVE(
         %r12:%r12 <-
         t1247)
      MOVE(
         %r13:%r13 <-
         t1248)
      MOVE(
         %r14:%r14 <-
         t1249)
      MOVE(
         %r15:%r15 <-
         t1250)
      JUMP(NAME(DONE_561))
      LABEL invokebad_511
      MOVE(
         %rax:%rax <-
         CALL(
            NAME(cs411error),
            CONST 2))
      JUMP(NAME(bail_506))
      LABEL iffalse_508
      MOVE(
         t1240 <-
         CONST 1)
      JUMP(NAME(endif_509))
      LABEL iffalse_515
      MOVE(
         t1240 <-
         CONST 1)
      JUMP(NAME(endif_516))
      LABEL DONE_561
   }
}
MethodFragment {
   X86_64Frame { label = cs411main
      nextLocalOffset = -8
      formals = List {
      }
   }
   List {
      LABEL L_562
      MOVE(
         t1251 <-
         %rbx:%rbx)
      MOVE(
         t1252 <-
         %r12:%r12)
      MOVE(
         t1253 <-
         %r13:%r13)
      MOVE(
         t1254 <-
         %r14:%r14)
      MOVE(
         t1255 <-
         %r15:%r15)
      MOVE(
         t1331 <-
         CALL(
            NAME(cs411newobject),
            CONST 0))
      MOVE(
         t1330 <-
         CALL(
            NAME(BT_Start),
            t1331))
      EXP(CALL(
         NAME(cs411println),
         t1330))
      LABEL bail_519
      MOVE(
         %rbx:%rbx <-
         t1251)
      MOVE(
         %r12:%r12 <-
         t1252)
      MOVE(
         %r13:%r13 <-
         t1253)
      MOVE(
         %r14:%r14 <-
         t1254)
      MOVE(
         %r15:%r15 <-
         t1255)
      LABEL DONE_563
   }
}
